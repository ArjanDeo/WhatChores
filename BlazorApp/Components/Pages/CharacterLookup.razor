@page "/CharacterLookup"
@inject List<RealmModel> realmData;
@inject IAppCache cache;

<PageTitle>Character Lookup</PageTitle>

<h1 class="text-4xl font-bold underline dark:text-white text-center pt-6">Character Lookup</h1>

<div class="container mx-auto pt-5">
    <form class="max-w-md mx-auto shadow-md rounded px-8 pt-6 pb-8 mb-4" method="post" @onsubmit="GetCharacterData" @formname="char-form">
        <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2" for="select-option">
                Select Character Realm
            </label>
            <div class="relative">
                <select id="select-option" @bind="realm" name="select-option" class="block h-12 appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500">
                 @if (realmData != null) 
                 {
                    @foreach (var realm in realmData)
                    {
                        <option value="@realm.RealmName">@realm.RealmName</option>                       
                    }
                 }
                </select>
                <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                    <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M6.293 8.293a1 1 0 0 1 1.414 0L10 10.586l2.293-2.293a1 1 0 0 1 1.414 1.414l-3 3a1 1 0 0 1-1.414 0l-3-3a1 1 0 0 1 0-1.414z" /></svg>
                </div>
            </div>
        </div>
        <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2" for="text-input">
                Character Name
            </label>
            <input @bind="name" id="text-input" type="text" placeholder="Enter name" class="appearance-none block w-full h-12 bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500">
        </div>
        <div class="flex items-center justify-between">
            <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="submit">
                Submit
            </button>
        </div>
    </form>
</div>

@code {
    public string realm;
    public string name;

    private readonly FluentClient client;
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    public CharacterLookup()
    {
        cache = new CachingService();
        client = new();
    }

    protected override async Task OnInitializedAsync()
    {
        realmData = await GetRealmData();
        realm = "Alexstrasza";        
    }

    private async void GetCharacterData()
    {
        if (realm != null && name != null)
        {
            NavigationManager.NavigateTo($"/Character/{realm}/{name}");
        } else
        {
            throw new Exception("bruh");
        }
    }

    private async Task<List<RealmModel>> GetRealmData()
    {
        try
        {
            return await cache.GetOrAddAsync("GetCurrentAffixes", async () =>
            {
                dynamic Response = await client.GetAsync("https://localhost:7031/api/v1/general/realms").AsString();

                List<RealmModel> realms = JsonConvert.DeserializeObject<List<RealmModel>>(Response);
                realms = realms.OrderBy(r => r.RealmName).ToList();
                return realms;
            }, TimeSpan.FromMinutes(60));
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

}
