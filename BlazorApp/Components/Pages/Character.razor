@page "/Character/{realm}/{name}"
@inject IAppCache cache;
@inject FluentClient client;

@if (dataLoaded)
{
    if (!characterLookupModel.SuccessfullyRetrievedCharacter)
    {
        <PageTitle>Failed to get data</PageTitle>
        <p class="text-red-500 text-xl text-center">Failed to retrieve character. Please try again later.</p>
    } else {

        var characterData = characterLookupModel.RaiderIOCharacterData;
    
    var mythicPlusData = characterLookupModel.RaiderIOCharacterData.mythic_plus_weekly_highest_level_runs;
    var top8Dungeons = characterLookupModel.DungeonVaultSlots.Take(8).ToList();
    <PageTitle>@characterData.name</PageTitle>

        <div style="color:@characterLookupModel.classColor" class="flex justify-center items-center pt-5 flex-wrap">
            <div class="max-w-md mx-auto bg-slate-800 rounded-xl shadow-md overflow-hidden md:max-w-2xl">
                <div class="md:flex">
                    <div class="md:shrink-0">
                        <img class="h-32 w-full object-cover md:h-full md:w-48" src="@characterData.thumbnail_url" alt="Modern building architecture">
                    </div>
                    <div style="color:@characterLookupModel.classColor" class="p-8">
                        <div class="uppercase tracking-wide text-sm font-semibold">@characterData.name <a>&lt;@characterData.guild.name&gt;</a></div>
                        <a href="#" class="block mt-1 text-lg leading-tight font-medium text-inherit hover:underline">Item Level @characterData.gear.item_level_equipped @characterData.active_spec_name @characterData.char_class</a>
                        @if (characterData.raid_progression.amirdrassilthedreamshope != null) {
                            <p class="mt-2 text-inherit">Raid Progress: @characterData.raid_progression.amirdrassilthedreamshope.summary</p>
                        } else
                        {
                            <p class="mt-2 text-inherit">No Raid Data</p>

                        }
                        @foreach (var x in characterData.mythic_plus_scores_by_season)
                        {
                            <p class="mt-2 text-inherit">M+ Score: @x.scores.all</p>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="text-slate-400">
            <h1 class="text-xl text-center text-inherit mt-5">Vault:</h1>
            <div class="overflow-x-auto">
                <table class="min-w-full bg-slate-900">
                    <thead>
                        <tr>
                            <th class="px-6 py-3 border-b border-slate-600 text-left leading-4 text-inherit">Type</th>
                            <th class="px-6 py-3 border-b border-slate-600 text-left leading-4 text-inherit">Defeat 2 Bosses</th>
                            <th class="px-6 py-3 border-b border-slate-600 text-left leading-4 text-inherit">Defeat 4 Bosses</th>
                            <th class="px-6 py-3 border-b border-slate-600 text-left leading-4 text-inherit">Defeat 7 Bosses</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-slate-600">
                        <tr>
                            <td class="px-6 py-4 whitespace-no-wrap">Raids</td>
                            @if (characterData.raid_progression.amirdrassilthedreamshope != null && characterData.raid_progression.amirdrassilthedreamshope.heroic_bosses_killed < 9) { 
                                <td class="px-6 py-4 whitespace-no-wrap text-green-600">Defeat 2 Amirdrassil, the Dream's Hope Bosses</td>
                                <td class="px-6 py-4 whitespace-no-wrap text-green-600">Defeat 4 Amirdrassil, the Dream's Hope Bosses</td>
                                <td class="px-6 py-4 whitespace-no-wrap text-green-600">Defeat 7 Amirdrassil, the Dream's Hope Bosses</td>
                            } else
                            {
                                <td class="px-6 py-4 whitespace-no-wrap text-red-600">Defeat 2 Amirdrassil, the Dream's Hope Bosses</td>
                                <td class="px-6 py-4 whitespace-no-wrap text-red-600">Defeat 4 Amirdrassil, the Dream's Hope Bosses</td>
                                <td class="px-6 py-4 whitespace-no-wrap text-red-600">Defeat 7 Amirdrassil, the Dream's Hope Bosses</td>
                            }
                        </tr>
                        <tr>
                            <td class="px-6 py-4 whitespace-no-wrap">Dungeons</td>
                            <td class="px-6 py-4 whitespace-no-wrap">Complete 1 Heroic, Mythic or Timewalking Dungeon</td>
                            <td class="px-6 py-4 whitespace-no-wrap">Complete 4 Heroic, Mythic or Timewalking Dungeons</td>
                            <td class="px-6 py-4 whitespace-no-wrap">Complete 8 Heroic, Mythic or Timewalking Dungeons</td>
                        </tr>
                        <tr>
                            <td class="px-6 py-4 whitespace-no-wrap">PvP</td>
                            <td class="px-6 py-4 whitespace-no-wrap">Earn 1250 Honor from Rated PvP</td>
                            <td class="px-6 py-4 whitespace-no-wrap">Earn 2500 Honor from Rated PvP</td>
                            <td class="px-6 py-4 whitespace-no-wrap">Earn 5000 Honor from Rated PvP</td>
                        </tr>
                    </tbody>
                </table>
            </div>

        </div>
    }    
}


@code {


    [Parameter]
    public string realm { get; set; }
    [Parameter]
    public string name { get; set; }

    public CharacterLookupModel characterLookupModel;
    public bool dataLoaded;

    public class KeyItemLevel
    {
        public int KeyLevel { get; set; }
        public int ItemLevel { get; set; }
    }

    public Character()
    {     
        client = new();
        characterLookupModel = new();
    }
    protected override async Task OnInitializedAsync()
    {
        characterLookupModel = await GetCharacterAsync();
    }

    private async Task<CharacterLookupModel> GetCharacterAsync()
    {       
        try
        {
            CharacterLookupModel ResponseData = await client
            .GetAsync("https://localhost:7031/api/v1/general/charData")
            .WithArgument("name", name)            
            .WithArgument("region", "us")
            .WithArgument("realm", realm)
            .As<CharacterLookupModel>();

            dataLoaded = true;

            return ResponseData;
        } catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
        
    }   
}
