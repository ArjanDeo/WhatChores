@page "/"
@inject WoWTokenPriceModel tokenData;
@inject RaiderIOMythicPlusAffixesModel affixData;
@inject IAppCache cache;

<PageTitle>Home</PageTitle>


<h1 class="text-4xl font-bold underline dark:text-white text-center pt-6">Home</h1>
@if(tokenData != null)
{
    <h1 class="text-2xl dark:text-white pt-5 text-center">The WoW Token is currently worth @tokenData.price.ToString("N0") gold.</h1>
}

<div class="flex justify-center">
    <div class="grid grid-cols-3 gap-4">
        @if (affixData.affix_details != null)
        {
            @foreach (var affix in affixData.affix_details)
            {
                <div class="relative group pt-3">
                    <a href="@affix.wowhead_url" target="_blank">
                    <img src="https://wow.zamimg.com/images/wow/icons/large/@(affix.icon).jpg"
                         class="hover:border-zinc-300 border-2 border-transparent rounded-lg cursor-pointer"
                         alt="@affix.name">
                    </a>
                    <span class="tooltip-text absolute bottom-full mb-2 w-auto hidden group-hover:block bg-black text-white text-xs rounded px-2 py-1 whitespace-nowrap">
                        @affix.name
                    </span>
                </div>
            }
        }
    </div>
</div>

@code {
    public Home()
    {
        cache = new CachingService();
    }

    private readonly FluentClient client = new();
    // private WoWTokenPriceModel tokenData = new();
    protected override async Task OnInitializedAsync()
    {
        tokenData = await GetWoWToken();
        affixData = await GetCurrentAffixes();       
    }

    private async Task<RaiderIOMythicPlusAffixesModel> GetCurrentAffixes()
    {
        try
        {
            return await cache.GetOrAddAsync("GetCurrentAffixes", async () =>
            {
                RaiderIOMythicPlusAffixesModel ResponseData = await client
                 .GetAsync("https://raider.io/api/v1/mythic-plus/affixes")
                 .WithArgument("region", "us")
                 .As<RaiderIOMythicPlusAffixesModel>();
                return ResponseData;
            }, TimeSpan.FromMinutes(60));
        } catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    private async Task<WoWTokenPriceModel> GetWoWToken()
    {
        try {
            return await cache.GetOrAddAsync("GetWoWToken", async () =>
               {
                   WoWTokenPriceModel response = await client
                  .GetAsync("https://localhost:7031/api/v1/general/wowtoken")
                  .As<WoWTokenPriceModel>();                
                   return response;
               }, TimeSpan.FromMinutes(60));

        } catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

}